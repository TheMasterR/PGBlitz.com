#!/bin/bash
#
# Title:      PGBlitz (Reference Title File)
# Author(s):  Admin9705 - Deiteq
# URL:        https://pgblitz.com - http://github.pgblitz.com
# GNU:        General Public License v3.0
################################################################################
---
- hosts: localhost
  gather_facts: false
  tasks:

    - name: Register Domain
      shell: "cat /pg/var/server.domain"
      register: domain
      ignore_errors: True

    - name: Register IP
      shell: "cat /pg/var/server.ip"
      register: ipaddress
      ignore_errors: True

    - name: Register Ports
      shell: "cat /pg/var/server.ports"
      register: ports
      ignore_errors: True

    - name: Register HD Path
      shell: "cat /pg/var/server.hd.path"
      register: path
      ignore_errors: True

    - name: Register HD Path
      shell: "cat /pg/var/server.hd.path"
      register: path
      ignore_errors: True

    - name: Register Auth Path
      shell: "cat /pg/var/server.ht"
      register: auth
      ignore_errors: True

    - name: Logging Ansible Role Information
      shell: "echo 'INFO - Ansible Role Folders Started' > /pg/var/logs/pg.log && bash /opt/plexguide/menu/log/log.sh"

  ############ GCrypt
    - name: GCrypt Check
      stat:
        path: /mnt/gcrypt
      register: gcrypt

    - name: Create GCrypt Folders
      file: "path={{item}} state=directory mode=0775 owner=1000 group=1000"
      with_items:
        - /mnt/gcrypt/tv
        - /mnt/gcrypt/movies
        - /mnt/gcrypt/music
        - /mnt/gcrypt/ebooks
        - /mnt/gcrypt/abooks
      when: gcrypt.stat.exists == False
      ignore_errors: yes
  ############ TCrypt
    - name: TCrypt Check
      stat:
        path: /mnt/tcrypt
      register: tcrypt

    - name: Create TCrypt Folders
      file: "path={{item}} state=directory mode=0775 owner=1000 group=1000"
      with_items:
        - /mnt/tcrypt/tv
        - /mnt/tcrypt/movies
        - /mnt/tcrypt/music
        - /mnt/tcrypt/ebooks
        - /mnt/tcrypt/abooks
      when: tcrypt.stat.exists == False
      ignore_errors: yes

  ############ Personal Containers Folder
    - name: MyContainers Check
      stat:
        path: /opt/mycontainers
      register: mycontainers

    - name: Create MyContainers Folders
      file: "path={{item}} state=directory mode=0775 owner=1000 group=1000"
      with_items:
        - /opt/mycontainers
      when: mycontainers.stat.exists == False
      ignore_errors: yes

  ############ PGUnion
    - name: PGUnion Check
      stat:
        path: /mnt/unionfs
      register: pgunion

    - name: Create PGUnion Folders
      file: "path={{item}} state=directory mode=0775 owner=1000 group=1000"
      with_items:
        - /mnt/unionfs
      when: pgunion.stat.exists == False
      ignore_errors: yes

  ############ TMP
    - name: TMP Check
      stat:
        path: /mnt/pg/tmp
      register: tmp

    - name: Create GDrive Folders
      file: "path={{item}} state=directory"
      with_items:
        - /mnt/pg/tmp
      when: tmp.stat.exists == False
      ignore_errors: yes

  ############ GDrive
    - name: GDrive Check
      stat:
        path: /mnt/gdrive
      register: gdrive

    - name: Create GDrive Folders
      file: "path={{item}} state=directory mode=0775 owner=1000 group=1000"
      with_items:
        - /mnt/gdrive
        - /mnt/gdrive/tv
        - /mnt/gdrive/movies
        - /mnt/gdrive/music
        - /mnt/gdrive/ebooks
        - /mnt/gdrive/abooks
      when: gdrive.stat.exists == False
      ignore_errors: yes
  ############ TCrypt
    - name: Create GDrive Folders
      file: "path={{item}} state=directory mode=0775 owner=1000 group=1000"
      with_items:
        - /mnt/tcrypt
        - /mnt/tcrypt/tv
        - /mnt/tcrypt/movies
        - /mnt/tcrypt/music
        - /mnt/tcrypt/ebooks
        - /mnt/tcrypt/abooks
      when: gdrive.stat.exists == False
      ignore_errors: yes

  ############ TDrive
    - name: TDrive Check
      stat:
        path: /mnt/tdrive
      register: tdrive

    - name: Create TDrive Folders
      file: "path={{item}} state=directory mode=0775 owner=1000 group=1000"
      with_items:
        - /mnt/tdrive
        - /mnt/tdrive/tv
        - /mnt/tdrive/movies
        - /mnt/tdrive/music
        - /mnt/tdrive/ebooks
        - /mnt/tdrive/abooks
      when: tdrive.stat.exists == False
      ignore_errors: yes

  ############ Encrypt
    - name: Encrypt Check
      stat:
        path: /mnt/encrypt
      register: encrypt

    - name: Create Encrypt Folders
      file: "path={{item}} state=directory mode=0775 owner=1000 group=1000"
      with_items:
        - /mnt/encrypt/tv
        - /mnt/encrypt/movies
        - /mnt/encrypt/music
        - /mnt/encrypt/ebooks
        - /mnt/encrypt/abooks
      when: encrypt.stat.exists == False
      ignore_errors: yes

    - name: Create Basic Directories
      file: "path={{item}} state=directory mode=0775 owner=1000 group=1000 recurse=true"
      with_items:
        - "/pg/data/blitz"
        - "/opt/communityapps"
        - "/opt/coreapps"
        - "/pg/var"
        - "/mnt/move"
        - "/pg/var/logs"
        - "/pg/data/blitz/keys/unprocessed"
        - "/pg/data/blitz/keys/processed"
        - "/pg/data/blitz/keys/badjson"
        - "{{path.stdout}}/pgops"
        - "{{path.stdout}}/downloads"
        - "{{path.stdout}}/nzb"
        - "{{path.stdout}}/torrent"
        - "{{path.stdout}}/move"
        - "/opt/var"
      ignore_errors: yes
