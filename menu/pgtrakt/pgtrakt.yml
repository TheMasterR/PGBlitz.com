#!/bin/bash
#
# Title:      PGBlitz (Reference Title File)
# YML Author: Admin9705
# URL:        https://pgblitz.com - http://github.pgblitz.com
# GNU:        General Public License v3.0
# Origin:     https://github.com/l3uddz/plex_patrol
################################################################################
---
- hosts: localhost
  gather_facts: false
  tasks:
    # FACTS ######################################################################
    - name: "Set Known Facts"
      set_fact:
        pgrole: "pgtrakt"
        extport: "0"

    - name: Server ID
      shell: "cat /pg/var/pg.serverid"
      register: serverid

    - name: Token Recall
      shell: "cat /pg/var/plex.token"
      register: plextoken

    - name: Recall User
      shell: "cat /pg/var/plex.user"
      register: user

    - name: Register IP
      shell: "cat /pg/var/server.ip"
      register: ipaddress

    - name: Sonarr API
      shell: "cat /pg/var/pgtrak.sapi"
      register: sapi
      ignore_errors: True

    - name: Radarr API
      shell: "cat /pg/var/pgtrak.rapi"
      register: rapi
      ignore_errors: True

    - name: Sonarr Profile
      shell: "cat /pg/var/pgtrak.sprofile"
      register: sprofile
      ignore_errors: True

    - name: Radarr Profile
      shell: "cat /pg/var/pgtrak.rprofile"
      register: rprofile
      ignore_errors: True

    - name: Trakt.tv Client
      shell: "cat /pg/var/pgtrak.client"
      register: client
      ignore_errors: True

    - name: Trakt.tv Secret
      shell: "cat /pg/var/pgtrak.secret"
      register: secret
      ignore_errors: True

    - name: Radarr Path
      shell: "cat /pg/var/pgtrak.rpath"
      register: rpath
      ignore_errors: True

    - name: API Sonnar
      shell: "cat /pg/var/pgtrak.spath"
      register: spath
      ignore_errors: True

    - name: Install pip requirements
      pip:
        requirements: /opt/plexguide/menu/pgtrakt/requirements.txt
        executable: pip3

    - name: "Including cron job"
      include_tasks: "/opt/coreapps/apps/_core.yml"

    - name: Create Basic Directories
      file: "path={{item}} state=directory mode=0775 owner=1000 group=1000"
      with_items:
        - "/pg/data/pgtrakt/"

    - name: Transfer Files
      copy:
        src: /opt/plexguide/menu/pgtrakt
        dest: /pg/data
        owner: "1000"
        group: "1000"
        mode: a+x
        force: yes

    - name: Import default config
      template:
        src: /pg/data/pgtrakt/config.json.sample
        dest: /pg/data/pgtrakt/config.json
        owner: "1000"
        group: "1000"
        mode: 0775
        force: yes

    - name: Set pgtrak.py as executable
      file:
        path: /pg/data/pgtrakt/pgtrakt.py
        owner: '1000'
        group: '1000'
        mode: a+x

    - name: "Create /usr/local/bin symlink"
      file:
        src: "/pg/data/pgtrakt/pgtrakt.py"
        dest: "/bin/pgtrakt"
        state: link

    - name: Check Service's Existance
      stat:
        path: "/etc/systemd/systemd/pgtrakt.service"
      register: pgp

    - name: Stop service
      service:
        name: pgtrakt
        state: stopped
      when: pgp.stat.exists

    - name: PGTrakt Service
      template:
        src: /pg/data/pgtrakt/systemd/pgtrakt.service
        dest: /etc/systemd/system/pgtrakt.service
        force: yes

    - name: Daemon-Reload
      systemd: state=stopped name=pgtrakt daemon_reload=yes enabled=no

    - name: Start PGTrakt
      systemd: state=started name=pgtrakt enabled=yes
